{"abi":[{"type":"receive","stateMutability":"payable"},{"type":"function","name":"isValidSigner","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"context","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"magicValue","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"state","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"token","inputs":[],"outputs":[{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"tokenContract","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"isValidSigner(address,bytes)":"523e3260","state()":"c19d93fb","token()":"fc0c546a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"isValidSigner\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"the ERC-165 identifier for this interface is `0x6faff5f1`\",\"kind\":\"dev\",\"methods\":{\"isValidSigner(address,bytes)\":{\"details\":\"Returns a magic value indicating whether a given signer is authorized to act on behalf of the account. MUST return the bytes4 magic value 0x523e3260 if the given signer is valid. By default, the holder of the non-fungible token the account is bound to MUST be considered a valid signer. Accounts MAY implement additional authorization logic which invalidates the holder as a signer or grants signing permissions to other non-holder accounts.\",\"params\":{\"context\":\"Additional data used to determine whether the signer is valid\",\"signer\":\"The address to check signing authorization for\"},\"returns\":{\"magicValue\":\"Magic value indicating whether the signer is valid\"}},\"state()\":{\"details\":\"Returns a value that SHOULD be modified each time the account changes state.\",\"returns\":{\"_0\":\"The current account state\"}},\"token()\":{\"details\":\"Returns the identifier of the non-fungible token which owns the account. The return value of this function MUST be constant - it MUST NOT change over time.\",\"returns\":{\"chainId\":\"      The EIP-155 ID of the chain the token exists on\",\"tokenContract\":\"The contract address of the token\",\"tokenId\":\"      The ID of the token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/tokenbound/lib/erc6551/src/interfaces/IERC6551Account.sol\":\"IERC6551Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/tokenbound/lib/openzeppelin-contracts/\",\":account-abstraction/=lib/tokenbound/lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/tokenbound/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc6551/=lib/tokenbound/lib/erc6551/src/\",\":forge-std/=lib/forge-std/src/\",\":multicall-authenticated/=lib/tokenbound/lib/multicall-authenticated/\",\":openzeppelin-contracts/=lib/tokenbound/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/tokenbound/lib/openzeppelin-contracts/contracts/\",\":tokenbound/=lib/tokenbound/\"]},\"sources\":{\"lib/tokenbound/lib/erc6551/src/interfaces/IERC6551Account.sol\":{\"keccak256\":\"0xda097894cc052f451ad669c5a07a9eda3f53a948f8080714850dc68cc1040b42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ca48dd1eff4f9eee3699a6800c09c4d208d103862f2a55d66286e8eb4b7771e\",\"dweb:/ipfs/QmX2KX2fmUV5rbVoJSAq6BTVVwxK1Jy169dRJN2h8UCNLz\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"context","type":"bytes"}],"stateMutability":"view","type":"function","name":"isValidSigner","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"state","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"token","outputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}]},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"isValidSigner(address,bytes)":{"details":"Returns a magic value indicating whether a given signer is authorized to act on behalf of the account. MUST return the bytes4 magic value 0x523e3260 if the given signer is valid. By default, the holder of the non-fungible token the account is bound to MUST be considered a valid signer. Accounts MAY implement additional authorization logic which invalidates the holder as a signer or grants signing permissions to other non-holder accounts.","params":{"context":"Additional data used to determine whether the signer is valid","signer":"The address to check signing authorization for"},"returns":{"magicValue":"Magic value indicating whether the signer is valid"}},"state()":{"details":"Returns a value that SHOULD be modified each time the account changes state.","returns":{"_0":"The current account state"}},"token()":{"details":"Returns the identifier of the non-fungible token which owns the account. The return value of this function MUST be constant - it MUST NOT change over time.","returns":{"chainId":"      The EIP-155 ID of the chain the token exists on","tokenContract":"The contract address of the token","tokenId":"      The ID of the token"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/tokenbound/lib/openzeppelin-contracts/","account-abstraction/=lib/tokenbound/lib/account-abstraction/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/tokenbound/lib/openzeppelin-contracts/lib/erc4626-tests/","erc6551/=lib/tokenbound/lib/erc6551/src/","forge-std/=lib/forge-std/src/","multicall-authenticated/=lib/tokenbound/lib/multicall-authenticated/","openzeppelin-contracts/=lib/tokenbound/lib/openzeppelin-contracts/","openzeppelin/=lib/tokenbound/lib/openzeppelin-contracts/contracts/","tokenbound/=lib/tokenbound/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/tokenbound/lib/erc6551/src/interfaces/IERC6551Account.sol":"IERC6551Account"},"evmVersion":"paris","libraries":{}},"sources":{"lib/tokenbound/lib/erc6551/src/interfaces/IERC6551Account.sol":{"keccak256":"0xda097894cc052f451ad669c5a07a9eda3f53a948f8080714850dc68cc1040b42","urls":["bzz-raw://8ca48dd1eff4f9eee3699a6800c09c4d208d103862f2a55d66286e8eb4b7771e","dweb:/ipfs/QmX2KX2fmUV5rbVoJSAq6BTVVwxK1Jy169dRJN2h8UCNLz"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/tokenbound/lib/erc6551/src/interfaces/IERC6551Account.sol","id":995,"exportedSymbols":{"IERC6551Account":[994]},"nodeType":"SourceUnit","src":"32:2037:8","nodes":[{"id":962,"nodeType":"PragmaDirective","src":"32:23:8","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":994,"nodeType":"ContractDefinition","src":"124:1944:8","nodes":[{"id":967,"nodeType":"FunctionDefinition","src":"397:27:8","nodes":[],"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"156:236:8","text":" @dev Allows the account to receive Ether.\n Accounts MUST implement a `receive` function.\n Accounts MAY perform arbitrary logic to restrict conditions\n under which Ether can be received."},"implemented":false,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":965,"nodeType":"ParameterList","parameters":[],"src":"404:2:8"},"returnParameters":{"id":966,"nodeType":"ParameterList","parameters":[],"src":"423:0:8"},"scope":994,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":977,"nodeType":"FunctionDefinition","src":"824:121:8","nodes":[],"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"430:389:8","text":" @dev Returns the identifier of the non-fungible token which owns the account.\n The return value of this function MUST be constant - it MUST NOT change over time.\n @return chainId       The EIP-155 ID of the chain the token exists on\n @return tokenContract The contract address of the token\n @return tokenId       The ID of the token"},"functionSelector":"fc0c546a","implemented":false,"kind":"function","modifiers":[],"name":"token","nameLocation":"833:5:8","parameters":{"id":969,"nodeType":"ParameterList","parameters":[],"src":"838:2:8"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"chainId","nameLocation":"896:7:8","nodeType":"VariableDeclaration","scope":977,"src":"888:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"888:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"tokenContract","nameLocation":"913:13:8","nodeType":"VariableDeclaration","scope":977,"src":"905:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":972,"name":"address","nodeType":"ElementaryTypeName","src":"905:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":975,"mutability":"mutable","name":"tokenId","nameLocation":"936:7:8","nodeType":"VariableDeclaration","scope":977,"src":"928:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"928:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"887:57:8"},"scope":994,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":983,"nodeType":"FunctionDefinition","src":"1104:49:8","nodes":[],"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"951:148:8","text":" @dev Returns a value that SHOULD be modified each time the account changes state.\n @return The current account state"},"functionSelector":"c19d93fb","implemented":false,"kind":"function","modifiers":[],"name":"state","nameLocation":"1113:5:8","parameters":{"id":979,"nodeType":"ParameterList","parameters":[],"src":"1118:2:8"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":983,"src":"1144:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1143:9:8"},"scope":994,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":993,"nodeType":"FunctionDefinition","src":"1937:129:8","nodes":[],"documentation":{"id":984,"nodeType":"StructuredDocumentation","src":"1159:773:8","text":" @dev Returns a magic value indicating whether a given signer is authorized to act on behalf\n of the account.\n MUST return the bytes4 magic value 0x523e3260 if the given signer is valid.\n By default, the holder of the non-fungible token the account is bound to MUST be considered\n a valid signer.\n Accounts MAY implement additional authorization logic which invalidates the holder as a\n signer or grants signing permissions to other non-holder accounts.\n @param  signer     The address to check signing authorization for\n @param  context    Additional data used to determine whether the signer is valid\n @return magicValue Magic value indicating whether the signer is valid"},"functionSelector":"523e3260","implemented":false,"kind":"function","modifiers":[],"name":"isValidSigner","nameLocation":"1946:13:8","parameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"signer","nameLocation":"1968:6:8","nodeType":"VariableDeclaration","scope":993,"src":"1960:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"1960:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"context","nameLocation":"1991:7:8","nodeType":"VariableDeclaration","scope":993,"src":"1976:22:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":987,"name":"bytes","nodeType":"ElementaryTypeName","src":"1976:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1959:40:8"},"returnParameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"magicValue","nameLocation":"2054:10:8","nodeType":"VariableDeclaration","scope":993,"src":"2047:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":990,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2047:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2046:19:8"},"scope":994,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IERC6551Account","contractDependencies":[],"contractKind":"interface","documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"57:67:8","text":"@dev the ERC-165 identifier for this interface is `0x6faff5f1`"},"fullyImplemented":false,"linearizedBaseContracts":[994],"name":"IERC6551Account","nameLocation":"134:15:8","scope":995,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":8}