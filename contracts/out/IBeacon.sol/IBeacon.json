{"abi":[{"type":"function","name":"implementation","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"implementation()":"5c60da1b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/tokenbound/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/tokenbound/lib/openzeppelin-contracts/\",\":account-abstraction/=lib/tokenbound/lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/tokenbound/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc6551/=lib/tokenbound/lib/erc6551/src/\",\":forge-std/=lib/forge-std/src/\",\":multicall-authenticated/=lib/tokenbound/lib/multicall-authenticated/\",\":openzeppelin-contracts/=lib/tokenbound/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/tokenbound/lib/openzeppelin-contracts/contracts/\",\":tokenbound/=lib/tokenbound/\"]},\"sources\":{\"lib/tokenbound/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/tokenbound/lib/openzeppelin-contracts/","account-abstraction/=lib/tokenbound/lib/account-abstraction/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/tokenbound/lib/openzeppelin-contracts/lib/erc4626-tests/","erc6551/=lib/tokenbound/lib/erc6551/src/","forge-std/=lib/forge-std/src/","multicall-authenticated/=lib/tokenbound/lib/multicall-authenticated/","openzeppelin-contracts/=lib/tokenbound/lib/openzeppelin-contracts/","openzeppelin/=lib/tokenbound/lib/openzeppelin-contracts/contracts/","tokenbound/=lib/tokenbound/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/tokenbound/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":"IBeacon"},"evmVersion":"paris","libraries":{}},"sources":{"lib/tokenbound/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61","urls":["bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354","dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/tokenbound/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol","id":1985,"exportedSymbols":{"IBeacon":[1984]},"nodeType":"SourceUnit","src":"93:357:20","nodes":[{"id":1976,"nodeType":"PragmaDirective","src":"93:23:20","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":1984,"nodeType":"ContractDefinition","src":"198:251:20","nodes":[{"id":1983,"nodeType":"FunctionDefinition","src":"389:58:20","nodes":[],"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"222:162:20","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"398:14:20","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[],"src":"412:2:20"},"returnParameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1983,"src":"438:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1980,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"437:9:20"},"scope":1984,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1977,"nodeType":"StructuredDocumentation","src":"118:79:20","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"linearizedBaseContracts":[1984],"name":"IBeacon","nameLocation":"208:7:20","scope":1985,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":20}